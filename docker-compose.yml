version: '2.4'

volumes:
  minio_data:
  redis_data:
  postgres_data:
  elasticsearch_data:

networks:
  backend:
  frontend:

services:
  # Our Database Service:
  postgres:
    labels:
      com.icalialabs.plis.group: deps
    image: postgres:9.6-alpine
    labels:
      com.icalialabs.plis.group: deps
    ports:
      # We'll bind our host's port 5432 to postgres's port 5432:
      - ${NUXEO_PG_PORT:-5432}:5432
    volumes:
      # Mount the postgres data volume
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    environment:
      # The POSTGRES_USER  will also be used as the name for the default database that is created
      # when the image is first started:
      POSTGRES_USER: nuxeo
      POSTGRES_PASSWORD: 3x4mpl3

  # Our Redis Service:
  redis:
    labels:
      com.icalialabs.plis.group: deps
    image: redis:3-alpine
    ports:
      - ${NUXEO_REDIS_PORT:-6379}:6379
    volumes:
      - redis_data:/var/lib/redis
    command: redis-server --appendonly yes
    networks:
      - backend

  # Our Blob Storage Service (compatible with Amazon S3 SDKs)
  minio:
    labels:
      com.icalialabs.plis.group: deps
    image: minio/minio:latest
    ports:
      - ${NUXEO_MINIO_PORT:-9000}:9000
    volumes:
      - minio_data:/export
    command: server /export
    networks:
      - backend
      - frontend
    environment:
      MINIO_ACCESS_KEY: ${NUXEO_MINIO_ACCESS_KEY:-9000AKIAIOSFODNN7EXAMPLE}
      MINIO_SECRET_KEY: ${NUXEO_MINIO_SECRET_KEY:-wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY}

  # Our Elasticsearch:
  elasticsearch:
    labels:
      com.icalialabs.plis.group: deps
    image: elasticsearch:6.4.2
    ports:
      - ${NUXEO_ES_HTTP_PORT:-9200}:9200
      - ${NUXEO_ES_TRANSPORT_PORT:-9300}:9300
    command: "elasticsearch -E cluster.name=nuxeoCluster"
    networks:
      - backend
      - frontend
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  # Finally, the nuxeo service:
  nuxeo:
    # image + build: We'll tell docker-compose to build the given image with our dockerfile:
    image: vovimayhem/nuxeo-test-drive-nuxeo:latest
    build:
      context: ./nuxeo
    ports:
      - ${NUXEO_WEB_PORT:-8080}:8080
    networks:
      - backend
      - frontend
    depends_on:
      - minio
      - redis
      - postgres
      - elasticsearch
    environment:
      NUXEO_DB_TYPE: postgresql
      NUXEO_DB_HOST: postgres
      NUXEO_DB_PASSWORD: 3x4mpl3
      NUXEO_ES_HOSTS: elasticsearch:9300
      NUXEO_REDIS_HOST: redis
      # Nuxeo Add-Ons:
      # - nuxeo-web-ui: Nuxeo Web UI - https://doc.nuxeo.com/nxdoc/web-ui/
      # - nuxeo-jsf-ui: The Back office view on the content repository - https://doc.nuxeo.com/nxdoc/nuxeo-jsf-ui/
      NUXEO_PACKAGES: nuxeo-web-ui nuxeo-jsf-ui
